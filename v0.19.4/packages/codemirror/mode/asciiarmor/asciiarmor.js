(function(c){"object"==typeof exports&&"object"==typeof module?c(require("../../lib/codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],c):c(CodeMirror)})(function(c){function e(a){var b=a.match(/^\s*\S/);a.skipToEnd();return b?"error":null}c.defineMode("asciiarmor",function(){return{token:function(a,b){var d;if("top"==b.state)return a.sol()&&(d=a.match(/^-----BEGIN (.*)?-----\s*$/))?(b.state="headers",b.type=d[1],"tag"):e(a);if("headers"==b.state){if(a.sol()&&a.match(/^\w+:/))return b.state=
"header","atom";if(a=e(a))b.state="body";return a}if("header"==b.state)return a.skipToEnd(),b.state="headers","string";if("body"==b.state){if(a.sol()&&(d=a.match(/^-----END (.*)?-----\s*$/))){if(d[1]!=b.type)return"error";b.state="end";return"tag"}if(a.eatWhile(/[A-Za-z0-9+\/=]/))return null;a.next();return"error"}if("end"==b.state)return e(a)},blankLine:function(a){"headers"==a.state&&(a.state="body")},startState:function(){return{state:"top",type:null}}}});c.defineMIME("application/pgp","asciiarmor");
c.defineMIME("application/pgp-encrypted","asciiarmor");c.defineMIME("application/pgp-keys","asciiarmor");c.defineMIME("application/pgp-signature","asciiarmor")});
